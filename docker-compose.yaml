services:
  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - kafka
  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres
      - cache
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CLUSTER_ID=OTk1QzBFQjctMThBMy00QU
    volumes:
      - ./kafka:/bitnami/kafka
  
  postgres:
    image: postgres:17
    container_name: postgres
    env_file:
      - ../auth-service/.env
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: passroot
      POSTGRES_DB: users
    volumes:
      - ./postgres:/var/lib/postgresql/data
    
  
  cache:
    image: redis:8.0-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass passroot
    volumes:
      - ./cache:/data